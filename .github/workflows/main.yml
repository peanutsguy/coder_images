#
name: Create and publish a Docker image

on:
  workflow_dispatch:
    
env:
  REGISTRY: ghcr.io
  IMAGE_BASENAME: peanutsguy/coder
  AZFUN_SUFFIX: azurefunction
  SWAPP_SUFFIX: staticwebapp
  AZOTF_SUFFIX: azureopentofu
  AZTERRA_SUFFIX: azureterraform

jobs:
  azurefunction:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta_funapp
        uses: docker/metadata-action@v5.7.0
        with:
          flavor: |
            latest=true
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}_${{ env.AZFUN_SUFFIX }}
      - name: Build and push Docker image
        id: push_funapp
        uses: docker/build-push-action@v6.16.0
        with:
          context: ./azurefunction/.
          push: true
          tags: ${{ steps.meta_funapp.outputs.tags }}
          labels: ${{ steps.meta_funapp.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}_${{ env.AZFUN_SUFFIX }}
          subject-digest: ${{ steps.push_funapp.outputs.digest }}
          push-to-registry: true

  staticwebapp:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta_swapp
        uses: docker/metadata-action@v5.7.0
        with:
          flavor: |
            latest=true
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}_${{ env.SWAPP_SUFFIX }}
      - name: Build and push Docker image
        id: push_swapp
        uses: docker/build-push-action@v6.16.0
        with:
          context: ./staticwebapp/.
          push: true
          platforms: linux/arm64,linux/amd64
          tags: ${{ steps.meta_swapp.outputs.tags }}
          labels: ${{ steps.meta_swapp.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}_${{ env.SWAPP_SUFFIX }}
          subject-digest: ${{ steps.push_swapp.outputs.digest }}
          push-to-registry: true

  azureopentofu:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta_azotf
        uses: docker/metadata-action@v5.7.0
        with:
          flavor: |
            latest=true
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}_${{ env.AZOTF_SUFFIX }}
      - name: Build and push Docker image
        id: push_azotf
        uses: docker/build-push-action@v6.16.0
        with:
          context: ./azureopentofu/.
          push: true
          platforms: linux/arm64,linux/amd64
          tags: ${{ steps.meta_azotf.outputs.tags }}
          labels: ${{ steps.meta_azotf.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}_${{ env.AZOTF_SUFFIX }}
          subject-digest: ${{ steps.push_azotf.outputs.digest }}
          push-to-registry: true

  azureterraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta_azterra
        uses: docker/metadata-action@v5.7.0
        with:
          flavor: |
            latest=true
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}_${{ env.AZTERRA_SUFFIX }}
      - name: Build and push Docker image
        id: push_azterra
        uses: docker/build-push-action@v6.16.0
        with:
          context: ./azureterraform/.
          push: true
          platforms: linux/arm64,linux/amd64
          tags: ${{ steps.meta_azterra.outputs.tags }}
          labels: ${{ steps.meta_azterra.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}_${{ env.AZTERRA_SUFFIX }}
          subject-digest: ${{ steps.push_azterra.outputs.digest }}
          push-to-registry: true
